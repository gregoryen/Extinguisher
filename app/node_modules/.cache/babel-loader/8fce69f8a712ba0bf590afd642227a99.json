{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pikma\\\\Desktop\\\\Extinguisher-frontend\\\\app\\\\src\\\\components\\\\Home\\\\AddTest.js\";\nimport React, { Component } from 'react';\nimport '../style/AddTest.css';\nimport { Auth } from 'aws-amplify';\nimport { Dropdown } from 'semantic-ui-react';\n\nclass AddTest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      testName: \"\",\n      question: \"\",\n      type: \"W\",\n      questionObj: {\n        \"type\": \"\",\n        \"langugage\": \"\",\n        \"questionContent\": \"\",\n        \"numberOfAvaibleAnswers\": \"\",\n        \"avaibleAnswers\": \"\"\n      },\n      questionArray: [],\n      errors: {\n        question: false,\n        type: false\n      },\n      numberOfQuestion: 4,\n      types: [\"Open\", \"Closed\"]\n    };\n    this.messages = {\n      type_incorect: 'Question type have not been chosen',\n      question_incorect: 'Your question has not any letter'\n    };\n\n    this.formValidation = () => {\n      let question = false;\n      let type = false;\n      let correct = false;\n\n      if (this.state.type == \"W\" || this.state.type == \"O\") {\n        type = true;\n      }\n\n      if (this.state.question.length > 0) {\n        question = true;\n      }\n\n      if (question && type) {\n        correct = true;\n      }\n\n      return {\n        correct,\n        question,\n        type\n      };\n    };\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.handlePlusButton = async e => {\n      alert(\"User confirmed\");\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const validation = this.formValidation();\n      console.log(validation);\n\n      if (validation.correct) {\n        this.setState({\n          message: 'Send, please wait',\n          errors: {\n            question: false,\n            type: false\n          }\n        });\n\n        try {\n          await Auth.confirmSignUp(this.state.question, this.state.type); // console.log(vall)\n\n          alert(\"User confirmed\");\n        } catch (e) {\n          alert(e.message);\n        }\n      } else {\n        this.setState({\n          errors: {\n            type: !validation.type,\n            question: !validation.question\n          }\n        });\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.message !== '') {\n      setTimeout(() => this.setState({\n        message: ''\n      }), 9000);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"addQuestion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"testName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"testName:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"testName\",\n      name: \"testName\",\n      value: this.state.testName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Chose question type\"), React.createElement(Greeting, {\n      state: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), \",\", React.createElement(\"select\", {\n      id: \"testType\",\n      onChange: () => {\n        this.setState({\n          type: document.getElementById('testType').value\n        });\n        this.setState();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"O\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"option\", {\n      value: \"W\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Closed\")));\n  }\n\n}\n\nfunction numberOfQuestion(state) {\n  const numbers = [2, 3, 4, 5, 6];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    id: \"numberOfQuestion\",\n    onChange: () => {\n      state.setState({\n        numberOfQuestion: document.getElementById('numberOfQuestion').value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, numbers.map(number => React.createElement(\"option\", {\n    value: number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, number))));\n}\n\nfunction OpenQuestion(state) {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  });\n}\n\nfunction ClosedQuestion(state) {\n  const numbers = [2, 3, 4, 5, 6];\n  var select = React.createElement(\"select\", {\n    id: \"numberOfQuestion\",\n    value: \"4\",\n    onChange: () => {\n      state.state.setState({\n        numberOfQuestion: document.getElementById('numberOfQuestion').value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, numbers.map(number => React.createElement(\"option\", {\n    value: number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, number)));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, select, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(InputClosedQuestion, {\n    state: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }));\n}\n\nfunction InputClosedQuestion(state) {\n  var rows = [];\n\n  for (var i = 0; i < state.state.state.state.numberOfQuestion; i++) {\n    rows.push(React.createElement(\"li\", {\n      htmlFor: 'question' + i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, 'Question nubmer: ' + (i + 1), React.createElement(\"input\", {\n      type: \"text\",\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, rows);\n}\n\nfunction Greeting(props) {\n  if (props.state.state.type == \"O\") {\n    return React.createElement(OpenQuestion, {\n      state: props.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(ClosedQuestion, {\n    state: props.state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  });\n}\n\nexport default AddTest;","map":{"version":3,"sources":["C:/Users/pikma/Desktop/Extinguisher-frontend/app/src/components/Home/AddTest.js"],"names":["React","Component","Auth","Dropdown","AddTest","state","testName","question","type","questionObj","questionArray","errors","numberOfQuestion","types","messages","type_incorect","question_incorect","formValidation","correct","length","handleChange","e","name","target","setState","value","handlePlusButton","alert","handleSubmit","preventDefault","validation","console","log","message","confirmSignUp","componentDidUpdate","setTimeout","render","document","getElementById","numbers","map","number","OpenQuestion","ClosedQuestion","select","InputClosedQuestion","rows","i","push","Greeting","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../style/AddTest.css'\r\nimport { Auth } from 'aws-amplify'\r\nimport { Dropdown } from 'semantic-ui-react'\r\n\r\n\r\n\r\nclass AddTest extends Component {\r\n    state = {\r\n        testName:\"\",\r\n        question:\"\",\r\n        type:\"W\",\r\n        questionObj: {\r\n            \"type\": \"\",\r\n            \"langugage\": \"\",\r\n            \"questionContent\": \"\",\r\n            \"numberOfAvaibleAnswers\": \"\",\r\n            \"avaibleAnswers\": \"\"\r\n          },\r\n        questionArray:[],\r\n        errors: {\r\n            question: false,\r\n            type: false,\r\n        },\r\n        numberOfQuestion:4,\r\n        types:[\"Open\",\"Closed\"]\r\n    }\r\n    \r\n        messages = {\r\n            type_incorect: 'Question type have not been chosen',\r\n            question_incorect: 'Your question has not any letter',\r\n        }\r\n        \r\n        formValidation = () => {\r\n            let question = false\r\n            let type = false\r\n            let correct = false\r\n            \r\n            if (this.state.type==\"W\" || this.state.type ==\"O\") {\r\n                type = true\r\n            }\r\n            if (this.state.question.length > 0) {\r\n                question = true\r\n            }\r\n            if (question && type) {\r\n                correct = true\r\n            }\r\n            return ({\r\n                correct, question, type\r\n            })\r\n        }\r\n        handleChange = (e) => {\r\n            const name = e.target.name;\r\n            this.setState({\r\n                [name]: e.target.value\r\n            })\r\n        };\r\n        handlePlusButton = async(e)=>{\r\n            alert(\"User confirmed\");\r\n         \r\n        }\r\n        handleSubmit = async (e) => {\r\n            e.preventDefault()\r\n    \r\n            const validation = this.formValidation()\r\n            console.log(validation)\r\n            if (validation.correct) {\r\n                this.setState({\r\n                    message: 'Send, please wait',\r\n                    errors: {\r\n                        question: false,\r\n                        type: false,\r\n                    }\r\n                })\r\n                try {   \r\n                    \r\n                    await Auth.confirmSignUp(this.state.question, this.state.type);\r\n                    // console.log(vall)\r\n                    alert(\"User confirmed\");\r\n                } catch (e) {\r\n                    alert(e.message);\r\n                }\r\n            }\r\n            else {\r\n                this.setState({\r\n                    errors: {\r\n                        type: !validation.type,\r\n                        question: !validation.question,\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        componentDidUpdate() {\r\n            if (this.state.message !== '') {\r\n                setTimeout(() => this.setState({\r\n                    message: ''\r\n                }), 9000);\r\n            }\r\n        }\r\n  \r\n        render() {\r\n            \r\n            return (\r\n             \r\n                <div className=\"addQuestion\">\r\n                     <label htmlFor=\"testName\">testName:\r\n                    <input type=\"text\" id=\"testName\" name=\"testName\" value={this.state.testName} onChange={this.handleChange} />\r\n                    </label>\r\n                    <label htmlFor=\"type\">Chose question type\r\n                    </label>\r\n                    <Greeting state={this} />,\r\n     <select id ='testType' onChange={()=>{\r\n        \r\n         this.setState({\r\n\r\n             type:document.getElementById('testType').value\r\n\r\n         })\r\n         this.setState();\r\n     }}>\r\n         <option value='O'>Open</option>\r\n         <option value ='W'>Closed</option>\r\n     </select>\r\n\r\n               </div>\r\n            );\r\n        }\r\n\r\n \r\n}\r\n\r\n\r\n\r\n\r\nfunction numberOfQuestion(state) {\r\n    const  numbers = [2,3,4,5,6];\r\n    return <div>\r\n            <select  id ='numberOfQuestion' onChange={()=>{ state.setState({numberOfQuestion:document.getElementById('numberOfQuestion').value})}}>\r\n     {numbers.map((number)=>\r\n    <option value={number}>{number}</option>)}\r\n            </select>\r\n    </div>\r\n  }\r\n  \r\nfunction OpenQuestion(state) {\r\n    return <h1></h1>;\r\n  }\r\n  function ClosedQuestion(state){\r\n    const  numbers = [2,3,4,5,6];\r\n    var select = <select  id ='numberOfQuestion' value ='4' onChange={()=>{ state.state.setState({numberOfQuestion:document.getElementById('numberOfQuestion').value})}}>\r\n    {numbers.map((number)=>\r\n   <option value={number}>{number}</option>)}\r\n           </select>\r\n\r\n      return <div>\r\n          {select}\r\n      <div>\r\n            \r\n    </div>\r\n        <InputClosedQuestion state={state} />\r\n        </div>\r\n  }\r\n  function InputClosedQuestion(state){\r\n    var rows = [];\r\n\r\n    for (var i = 0; i < state.state.state.state.numberOfQuestion; i++) {\r\n       \r\n        rows.push(<li htmlFor={'question'+i}>{'Question nubmer: '+(i+1)}\r\n              <input type=\"text\"  value=''/>\r\n        </li>);\r\n    }\r\n    \r\n            return <div>\r\n                {rows}\r\n            </div>\r\n  }\r\n\r\nfunction Greeting(props) {\r\n\r\n    if ( props.state.state.type == \"O\") {\r\n      return <OpenQuestion state={props.state} />;\r\n    }\r\n\r\n    return <ClosedQuestion state={props.state}/>;\r\n\r\n  }\r\nexport default AddTest;"]},"metadata":{},"sourceType":"module"}