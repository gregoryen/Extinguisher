{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pikma\\\\Desktop\\\\Extinguisher\\\\app\\\\src\\\\components\\\\Home\\\\AddTest.js\";\nimport React, { Component } from 'react';\nimport '../style/AddTest.css';\nimport { Auth } from 'aws-amplify';\n\nclass AddTest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      testName: \"\",\n      question: \"\",\n      type: \"O\",\n      errors: {\n        question: false,\n        type: false\n      },\n      types: [\"Open\", \"Closed\"],\n      questionArray: []\n    };\n    this.messages = {\n      type_incorect: 'Question type have not been chosen',\n      question_incorect: 'Your question has not any letter'\n    };\n\n    this.formValidation = () => {\n      let question = false;\n      let type = false;\n      let correct = false;\n\n      if (this.state.type == \"W\" || this.state.type == \"O\") {\n        type = true;\n      }\n\n      if (this.state.question.length > 0) {\n        question = true;\n      }\n\n      if (question && type) {\n        correct = true;\n      }\n\n      return {\n        correct,\n        question,\n        type\n      };\n    };\n\n    this.handleChange = e => {\n      const name = e.target.id;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.handleChangeAnswer = e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: document.getElementById(name)\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const validation = this.formValidation();\n      console.log(validation);\n\n      if (validation.correct) {\n        this.setState({\n          message: 'Send, please wait',\n          errors: {\n            question: false,\n            type: false\n          }\n        });\n\n        try {\n          await Auth.confirmSignUp(this.state.question, this.state.type); // console.log(vall)\n\n          alert(\"User confirmed\");\n        } catch (e) {\n          alert(e.message);\n        }\n      } else {\n        this.setState({\n          errors: {\n            type: !validation.type,\n            question: !validation.question\n          }\n        });\n      }\n    };\n\n    this.handleQuestionSubmit = e => {\n      this.state.questionArray.push(e);\n    };\n\n    this.handleDeleteQuestion = e => {\n      console.log(e);\n      this.state.questionArray.splice(e, 1);\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.message !== '') {\n      setTimeout(() => this.setState({\n        message: ''\n      }), 5000);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"addQuestion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"testName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"testName:\", React.createElement(\"input\", {\n      type: \"question\",\n      id: \"question\",\n      name: \"question\",\n      value: this.state.question,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Chose question type\"), React.createElement(\"select\", {\n      id: \"testType\",\n      onChange: () => {\n        this.setState({\n          type: document.getElementById('testType').value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"O\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"option\", {\n      value: \"W\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Closed\")), React.createElement(QuestionType, {\n      type: this.state.type,\n      question: this.state.question,\n      pusher: this.handleQuestionSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(QuestionViewComponent, {\n      handlerDelete: this.handleDeleteQuestion,\n      questionArray: this.state.questionArray,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass OpenQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuestionSubmit = () => {\n      var numberOfAvaibleAnswers = 0;\n      var avaibleAnswers = \"\";\n      var questionObj = {\n        type: \"O\",\n        language: \"PL\",\n        numberOfAvaibleAnswers: numberOfAvaibleAnswers,\n        questionContent: this.props.question,\n        avaibleAnswers: avaibleAnswers\n      };\n      console.log(questionObj);\n      this.props.pusher(questionObj);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"DZIALA OPEN QUESTION HERE\"), React.createElement(\"button\", {\n      onClick: this.handleQuestionSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"submit\"));\n  }\n\n}\n\nclass ClosedQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuestionSubmit = () => {\n      var numberOfAvaibleAnswers = this.state.numberOfAvaibleAnswers;\n      var avaibleAnswers = \"\";\n\n      for (var i = 0; i < this.state.numberOfAvaibleAnswers; i++) {\n        avaibleAnswers += eval('this.state.answer' + i);\n        avaibleAnswers += \"|\";\n      }\n\n      avaibleAnswers = avaibleAnswers.substring(0, avaibleAnswers.length - 1);\n      var questionObj = {\n        type: \"W\",\n        language: \"PL\",\n        numberOfAvaibleAnswers: numberOfAvaibleAnswers,\n        questionContent: this.props.question,\n        avaibleAnswers: avaibleAnswers\n      };\n      console.log(questionObj);\n      this.props.pusher(questionObj);\n    };\n\n    this.toggleChange = e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: e.target.checked\n      });\n    };\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.state = {\n      numbers: [2, 3, 4, 5, 6],\n      numberOfAvaibleAnswers: 4,\n      answer0: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n      answer4: \"\",\n      answer5: \"\",\n      isCorrect0: false,\n      isCorrect1: false,\n      isCorrect2: false,\n      isCorrect3: false,\n      isCorrect4: false,\n      isCorrect5: false,\n      numberToRender: 4\n    };\n    console.log(this);\n  }\n\n  render() {\n    var rows = [];\n\n    for (var i = 0; i < this.state.numberOfAvaibleAnswers; i++) {\n      rows.push(React.createElement(\"li\", {\n        htmlFor: 'question' + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, 'Question nubmer: ' + (i + 1), React.createElement(\"input\", {\n        id: 'answer' + i,\n        name: 'answer' + i,\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state[i + 2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: 'isCorrect' + i,\n        name: 'isCorrect' + i,\n        type: \"checkbox\",\n        onChange: this.toggleChange,\n        value: this.state[i + 8],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"numberOfAvaibleAnswers\",\n      name: \"numberOfAvaibleAnswers\",\n      defaultValue: \"4\",\n      onChange: () => {\n        this.setState({\n          numberOfAvaibleAnswers: document.getElementById('numberOfAvaibleAnswers').value\n        });\n        ;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, this.state.numbers.map(number => React.createElement(\"option\", {\n      id: number,\n      name: number,\n      value: number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, number))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, rows), React.createElement(\"button\", {\n      onClick: this.handleQuestionSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"submit\"));\n  }\n\n}\n\nclass QuestionType extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    if (this.props.type == \"O\") {\n      return React.createElement(OpenQuestion, {\n        pusher: this.props.pusher,\n        question: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(ClosedQuestion, {\n      pusher: this.props.pusher,\n      question: this.props.question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass QuestionViewComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      iterator: 0\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState(() => {\n        console.log('setting state');\n        return {\n          nothing: \"\"\n        };\n      });\n    }, 1000);\n  }\n\n  iteratorPlus() {\n    if (this.state.iterator >= this.props.questionArray.length) this.setState({\n      iterator: this.state.iterator + 1\n    });else this.setState({\n      iterator: 0\n    });\n  }\n\n  render() {\n    var questionList = [];\n\n    for (; this.state.iterator < this.props.questionArray.length; this.iteratorPlus()) {\n      questionList.push(React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \" \", this.props.questionArray[this.state.iterator].questionContent, \"  \", this.props.questionArray[this.state.iterator].type, React.createElement(\"button\", {\n        onClick: () => {\n          console.log(this.state.iterator);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"delete\"), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"edit\")));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, questionList);\n  }\n\n}\n\nexport default AddTest;","map":{"version":3,"sources":["C:/Users/pikma/Desktop/Extinguisher/app/src/components/Home/AddTest.js"],"names":["React","Component","Auth","AddTest","state","testName","question","type","errors","types","questionArray","messages","type_incorect","question_incorect","formValidation","correct","length","handleChange","e","name","target","id","setState","value","handleChangeAnswer","document","getElementById","handleSubmit","preventDefault","validation","console","log","message","confirmSignUp","alert","handleQuestionSubmit","push","handleDeleteQuestion","splice","componentDidUpdate","setTimeout","render","OpenQuestion","constructor","props","numberOfAvaibleAnswers","avaibleAnswers","questionObj","language","questionContent","pusher","ClosedQuestion","i","eval","substring","toggleChange","checked","numbers","answer0","answer1","answer2","answer3","answer4","answer5","isCorrect0","isCorrect1","isCorrect2","isCorrect3","isCorrect4","isCorrect5","numberToRender","rows","map","number","QuestionType","QuestionViewComponent","iterator","componentDidMount","setInterval","nothing","iteratorPlus","questionList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../style/AddTest.css'\r\nimport { Auth } from 'aws-amplify'\r\n\r\n\r\n\r\n\r\nclass AddTest extends Component {\r\n    state = {\r\n        testName:\"\",\r\n        question:\"\",\r\n        type:\"O\",\r\n        errors: {\r\n            question: false,\r\n            type: false,\r\n        },\r\n        types:[\"Open\",\"Closed\"],\r\n        questionArray:[]\r\n    }\r\n    \r\n        messages = {\r\n            type_incorect: 'Question type have not been chosen',\r\n            question_incorect: 'Your question has not any letter',\r\n        }\r\n        \r\n        formValidation = () => {\r\n            let question = false\r\n            let type = false\r\n            let correct = false\r\n            \r\n            if (this.state.type==\"W\" || this.state.type ==\"O\") {\r\n                type = true\r\n            }\r\n            if (this.state.question.length > 0) {\r\n                question = true\r\n            }\r\n            if (question && type) {\r\n                correct = true\r\n            }\r\n            return ({\r\n                correct, question, type\r\n            })\r\n        }\r\n        handleChange = (e) => {\r\n            const name = e.target.id;\r\n            this.setState({\r\n                [name]: e.target.value\r\n            })\r\n        };\r\n        handleChangeAnswer=(e)=>{\r\n            const name = e.target.name;\r\n            this.setState({\r\n                [name]:document.getElementById(name)\r\n            })\r\n        }\r\n        handleSubmit = async (e) => {\r\n            e.preventDefault()\r\n            const validation = this.formValidation()\r\n            console.log(validation)\r\n            if (validation.correct) {\r\n                this.setState({\r\n                    message: 'Send, please wait',\r\n                    errors: {\r\n                        question: false,\r\n                        type: false,\r\n                    }\r\n                })\r\n                try {   \r\n                    \r\n                    await Auth.confirmSignUp(this.state.question, this.state.type);\r\n                    // console.log(vall)\r\n                    alert(\"User confirmed\");\r\n                } catch (e) {\r\n                    alert(e.message);\r\n                }\r\n            }\r\n            else {\r\n                this.setState({\r\n                    errors: {\r\n                        type: !validation.type,\r\n                        question: !validation.question,\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        componentDidUpdate() {\r\n            if (this.state.message !== '') {\r\n                setTimeout(() => this.setState({\r\n                    message: ''\r\n                }), 5000);\r\n            }\r\n        }\r\n        handleQuestionSubmit=(e)=>{\r\n\r\n            this.state.questionArray.push(e);\r\n                \r\n        }\r\n        handleDeleteQuestion=(e)=>{\r\n            console.log(e)\r\n            this.state.questionArray.splice(e,1);\r\n        }\r\n        render() {\r\n            \r\n            return (\r\n             \r\n                <div className=\"addQuestion\">\r\n                     <label htmlFor=\"testName\">testName:\r\n                    <input type=\"question\" id=\"question\" name=\"question\" value={this.state.question} onChange={this.handleChange} />\r\n                    </label>\r\n                    <label htmlFor=\"type\">Chose question type\r\n                    </label>\r\n                    <select id ='testType' onChange={()=>{\r\n        \r\n        this.setState(\r\n            \r\n            {\r\n            type:document.getElementById('testType').value,\r\n        })\r\n    }}>\r\n        <option value='O'>Open</option>\r\n        <option value ='W'>Closed</option>\r\n    </select>\r\n                    <QuestionType type={this.state.type} question={this.state.question} pusher={this.handleQuestionSubmit}/>\r\n                    <QuestionViewComponent handlerDelete={this.handleDeleteQuestion} questionArray={this.state.questionArray}></QuestionViewComponent> \r\n               </div>\r\n            );\r\n        }\r\n}\r\nclass OpenQuestion extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    this.state={        \r\n    }\r\n}\r\n    handleQuestionSubmit = ()=>{\r\n        var numberOfAvaibleAnswers = 0;\r\n     var avaibleAnswers=\"\"\r\n                var questionObj={\r\n                    type:\"O\",\r\n                    language:\"PL\",\r\n                    numberOfAvaibleAnswers:numberOfAvaibleAnswers,\r\n                    questionContent:this.props.question,\r\n                    avaibleAnswers:avaibleAnswers         \r\n                }\r\n                console.log(questionObj)\r\n                this.props.pusher(questionObj);\r\n    }\r\n    render(){\r\n        return <div>\r\n            <div>DZIALA OPEN QUESTION HERE</div>\r\n        <button onClick={this.handleQuestionSubmit}>submit</button>\r\n</div>\r\n    }\r\n}\r\nclass ClosedQuestion extends Component{\r\n\r\n    constructor(props){\r\n    super(props);\r\n    this.state={\r\n        numbers:[2,3,4,5,6],\r\n        numberOfAvaibleAnswers:4,\r\n        answer0:\"\",\r\n        answer1:\"\",\r\n        answer2:\"\",\r\n        answer3:\"\",\r\n        answer4:\"\",\r\n        answer5:\"\",\r\n        isCorrect0:false,\r\n        isCorrect1:false,\r\n        isCorrect2:false,\r\n        isCorrect3:false,\r\n        isCorrect4:false,\r\n        isCorrect5:false,\r\n        numberToRender:4,\r\n    }\r\n    console.log(this)\r\n    }\r\n    handleQuestionSubmit = ()=>{\r\n       \r\n        \r\n        var numberOfAvaibleAnswers = this.state.numberOfAvaibleAnswers;\r\n     var avaibleAnswers=\"\"\r\n            for(var i =0;i<this.state.numberOfAvaibleAnswers;i++)\r\n            {\r\n            avaibleAnswers+=eval('this.state.answer'+i);\r\n            avaibleAnswers+=\"|\";\r\n            }\r\n        avaibleAnswers= avaibleAnswers.substring(0,avaibleAnswers.length-1);\r\n            \r\n                var questionObj={\r\n                    type:\"W\",\r\n                    language:\"PL\",\r\n                    numberOfAvaibleAnswers:numberOfAvaibleAnswers,\r\n                    questionContent:this.props.question,\r\n                    avaibleAnswers:avaibleAnswers\r\n                    \r\n                }\r\n                console.log(questionObj)\r\n                this.props.pusher(questionObj);\r\n    }\r\n\r\n    toggleChange = (e) => {\r\n        const name = e.target.name\r\n        \r\n        this.setState({\r\n         [name]: e.target.checked,\r\n        });\r\n      }\r\n    \r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        this.setState({\r\n            [name]: e.target.value\r\n        })\r\n    };\r\n    render(){\r\n        var rows = [];\r\n        for (var i = 0; i < this.state.numberOfAvaibleAnswers; i++) {\r\n           \r\n            rows.push(<li htmlFor={'question'+i}>{'Question nubmer: '+(i+1)}\r\n                  <input id= {'answer'+i} name={'answer'+i} type=\"text\"   onChange = {this.handleChange}  value={this.state[i+2]}/>\r\n                  <input id ={'isCorrect'+i} name ={'isCorrect'+i} type='checkbox' onChange={this.toggleChange} value ={this.state[i+8]} ></input>\r\n            </li>);\r\n        }\r\n      return <div>\r\n                    <select  id ='numberOfAvaibleAnswers' name ='numberOfAvaibleAnswers' defaultValue ='4' onChange={()=>{\r\n                         \r\n                         this.setState({\r\n                            numberOfAvaibleAnswers:document.getElementById('numberOfAvaibleAnswers').value,\r\n                        });\r\n        ;\r\n       \r\n        }}> \r\n        {this.state.numbers.map((number)=>\r\n                        <option id={number} name={number} value={number}>{number}</option>)}\r\n                    </select>\r\n                \r\n        <div>\r\n                {rows}\r\n            </div>\r\n            <button onClick={this.handleQuestionSubmit}>submit</button>\r\n            </div>\r\n        \r\n    }\r\n}\r\nclass QuestionType extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n    \r\n    this.state={\r\n\r\n    }\r\n\r\n}\r\n    render(){\r\n        if ( this.props.type == \"O\") {\r\n            return <OpenQuestion  pusher={this.props.pusher} question={this.props.question} />;\r\n        }\r\n  \r\n        return <ClosedQuestion pusher={this.props.pusher} question={this.props.question}/>;\r\n        }\r\n    }\r\n    class QuestionViewComponent extends Component{\r\n\r\n        constructor(props){\r\n            super(props)\r\n            this.state={\r\n                iterator:0\r\n                \r\n            }\r\n        }\r\n        componentDidMount() {\r\n            setInterval(() => {\r\n                this.setState(() => {\r\n                    console.log('setting state');\r\n                    return { nothing : \"\" }\r\n                });\r\n            }, 1000);\r\n        }\r\n\r\n        iteratorPlus(){\r\n            if(this.state.iterator >= this.props.questionArray.length)\r\n            this.setState({\r\n                iterator:this.state.iterator+1\r\n            })\r\n            else\r\n            this.setState({\r\n                iterator:0\r\n            })\r\n        }\r\n        render(){\r\n          \r\n            var questionList=[];\r\n            \r\n            for(;this.state.iterator<this.props.questionArray.length;this.iteratorPlus())\r\n            {\r\n            questionList.push(<li> {this.props.questionArray[this.state.iterator].questionContent}  {this.props.questionArray[this.state.iterator].type}\r\n            <button  onClick={()=>{console.log(this.state.iterator)}}>delete</button>\r\n            <button>edit</button>\r\n            </li>)\r\n            }\r\n        return <div>\r\n            {questionList}\r\n        </div>\r\n    }\r\n}\r\nexport default AddTest;"]},"metadata":{},"sourceType":"module"}