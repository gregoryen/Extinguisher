{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pikma\\\\Desktop\\\\Extinguisher-frontend\\\\app\\\\src\\\\components\\\\Home\\\\AddTest.js\";\nimport React, { Component } from 'react';\nimport '../style/AddTest.css';\nimport { Auth } from 'aws-amplify';\n\nclass AddTest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      question: \"\",\n      type: \"\",\n      questionObj: {\n        \"type\": \"\",\n        \"langugage\": \"\",\n        \"questionContent\": \"\",\n        \"numberOfAvaibleAnswers\": \"\",\n        \"avaibleAnswers\": \"\"\n      },\n      questionArray: [],\n      errors: {\n        question: false,\n        type: false\n      }\n    };\n    this.messages = {\n      type_incorect: 'Question type have not been chosen',\n      question_incorect: 'Your question has not any letter'\n    };\n\n    this.formValidation = () => {\n      let question = false;\n      let type = false;\n      let correct = false;\n\n      if (this.state.type == \"W\" || this.state.type == \"O\") {\n        type = true;\n      }\n\n      if (this.state.question.length > 0) {\n        question = true;\n      }\n\n      if (question && type) {\n        correct = true;\n      }\n\n      return {\n        correct,\n        question,\n        type\n      };\n    };\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.handlePlusButton = async e => {\n      alert(\"User confirmed\");\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const validation = this.formValidation();\n      console.log(validation);\n\n      if (validation.correct) {\n        this.setState({\n          message: 'Send, please wait',\n          errors: {\n            email: false,\n            code: false\n          }\n        });\n\n        try {\n          await Auth.confirmSignUp(this.state.email, this.state.code); // console.log(vall)\n\n          alert(\"User confirmed\");\n        } catch (e) {\n          alert(e.message);\n        }\n      } else {\n        this.setState({\n          errors: {\n            email: !validation.email,\n            code: !validation.code\n          }\n        });\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.message !== '') {\n      setTimeout(() => this.setState({\n        message: ''\n      }), 9000);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"addQuestion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.alert(\"PIES\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"addQuestion\"));\n  }\n\n}\n\nexport default AddTest;","map":{"version":3,"sources":["C:/Users/pikma/Desktop/Extinguisher-frontend/app/src/components/Home/AddTest.js"],"names":["React","Component","Auth","AddTest","state","question","type","questionObj","questionArray","errors","messages","type_incorect","question_incorect","formValidation","correct","length","handleChange","e","name","target","setState","value","handlePlusButton","alert","handleSubmit","preventDefault","validation","console","log","message","email","code","confirmSignUp","componentDidUpdate","setTimeout","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../style/AddTest.css'\r\nimport { Auth } from 'aws-amplify'\r\n\r\n\r\n\r\n\r\n\r\nclass AddTest extends Component {\r\n    state = {\r\n        question:\"\",\r\n        type:\"\",\r\n        questionObj: {\r\n            \"type\": \"\",\r\n            \"langugage\": \"\",\r\n            \"questionContent\": \"\",\r\n            \"numberOfAvaibleAnswers\": \"\",\r\n            \"avaibleAnswers\": \"\"\r\n          },\r\n        questionArray:[],\r\n        errors: {\r\n            question: false,\r\n            type: false,\r\n        }\r\n    }\r\n        messages = {\r\n            type_incorect: 'Question type have not been chosen',\r\n            question_incorect: 'Your question has not any letter',\r\n        }\r\n        formValidation = () => {\r\n            let question = false\r\n            let type = false\r\n            let correct = false\r\n            \r\n            if (this.state.type==\"W\" || this.state.type ==\"O\") {\r\n                type = true\r\n            }\r\n            if (this.state.question.length > 0) {\r\n                question = true\r\n            }\r\n            if (question && type) {\r\n                correct = true\r\n            }\r\n            return ({\r\n                correct, question, type\r\n            })\r\n        }\r\n        handleChange = (e) => {\r\n            const name = e.target.name;\r\n            this.setState({\r\n                [name]: e.target.value\r\n            })\r\n        };\r\n        handlePlusButton = async(e)=>{\r\n            alert(\"User confirmed\");\r\n         \r\n        }\r\n        handleSubmit = async (e) => {\r\n            e.preventDefault()\r\n    \r\n            const validation = this.formValidation()\r\n            console.log(validation)\r\n            if (validation.correct) {\r\n                this.setState({\r\n                    message: 'Send, please wait',\r\n                    errors: {\r\n                        email: false,\r\n                        code: false,\r\n                    }\r\n                })\r\n                try {   \r\n                    \r\n                    await Auth.confirmSignUp(this.state.email, this.state.code);\r\n                    // console.log(vall)\r\n                    alert(\"User confirmed\");\r\n                } catch (e) {\r\n                    alert(e.message);\r\n                }\r\n            }\r\n            else {\r\n                this.setState({\r\n                    errors: {\r\n                        email: !validation.email,\r\n                        code: !validation.code,\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        componentDidUpdate() {\r\n            if (this.state.message !== '') {\r\n                setTimeout(() => this.setState({\r\n                    message: ''\r\n                }), 9000);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <div className=\"addQuestion\">\r\n            <button onClick={this.alert(\"PIES\")} >addQuestion</button>\r\n                </div>\r\n            );\r\n        }\r\n}\r\nexport default AddTest;"]},"metadata":{},"sourceType":"module"}