{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pikma\\\\Desktop\\\\Extinguisher\\\\app\\\\src\\\\components\\\\Home\\\\AddTest.js\";\nimport React, { Component } from 'react';\nimport '../style/AddTest.css';\nimport { Auth } from 'aws-amplify';\nimport { XRNoDomElement } from '@aws-amplify/xr';\n\nclass AddTest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      testName: \"\",\n      question: \"\",\n      type: \"O\",\n      errors: {\n        question: false,\n        type: false\n      },\n      types: [\"Open\", \"Closed\"],\n      questionArray: []\n    };\n    this.messages = {\n      type_incorect: 'Question type have not been chosen',\n      question_incorect: 'Your question has not any letter'\n    };\n\n    this.formValidation = () => {\n      let question = false;\n      let type = false;\n      let correct = false;\n\n      if (this.state.type == \"W\" || this.state.type == \"O\") {\n        type = true;\n      }\n\n      if (this.state.question.length > 0) {\n        question = true;\n      }\n\n      if (question && type) {\n        correct = true;\n      }\n\n      return {\n        correct,\n        question,\n        type\n      };\n    };\n\n    this.handleChange = e => {\n      const name = e.target.id;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.handleChangeAnswer = e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: document.getElementById(name)\n      });\n    };\n\n    this.handleEdit = e => {\n      if (this.state.questionArray[e].type == 'W') {\n        document.getElementById(\"testType\").selectedIndex = \"1\";\n      } else {\n        document.getElementById(\"testType\").selectedIndex = \"0\";\n        this.setState({\n          question: this.state.questionArray[e].questionContent,\n          type: this.state.questionArray[e].type\n        });\n      }\n\n      this.state.questionArray.splice(e, 1);\n    };\n\n    this.handleQuestionSubmit = e => {\n      this.state.questionArray.push(e);\n    };\n\n    this.handleDeleteQuestion = e => {\n      this.state.questionArray.splice(e, 1);\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.message !== '') {\n      setTimeout(() => this.setState({\n        message: ''\n      }), 1000);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"addQuestion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"testName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"testName:\", React.createElement(\"input\", {\n      type: \"question\",\n      id: \"question\",\n      name: \"question\",\n      value: this.state.question,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Chose question type\"), React.createElement(\"select\", {\n      id: \"testType\",\n      onChange: () => {\n        this.setState({\n          type: document.getElementById('testType').value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"O\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"option\", {\n      value: \"W\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Closed\")), React.createElement(QuestionType, {\n      type: this.state.type,\n      question: this.state.question,\n      pusher: this.handleQuestionSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(QuestionViewComponent, {\n      handlerEdit: this.handleEdit,\n      handlerDelete: this.handleDeleteQuestion,\n      questionArray: this.state.questionArray,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass OpenQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuestionSubmit = () => {\n      var numberOfAvaibleAnswers = 0;\n      var avaibleAnswers = \"\";\n      var questionObj = {\n        type: \"O\",\n        language: \"PL\",\n        numberOfAvaibleAnswers: numberOfAvaibleAnswers,\n        questionContent: this.props.question,\n        avaibleAnswers: avaibleAnswers\n      };\n      console.log(questionObj);\n      this.props.pusher(questionObj);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"DZIALA OPEN QUESTION HERE\"), React.createElement(\"button\", {\n      onClick: this.handleQuestionSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"submit\"));\n  }\n\n}\n\nclass ClosedQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuestionSubmit = () => {\n      var numberOfAvaibleAnswers = this.state.numberOfAvaibleAnswers;\n      var avaibleAnswers = \"\";\n\n      for (var i = 0; i < this.state.numberOfAvaibleAnswers; i++) {\n        avaibleAnswers += eval('this.state.answer' + i);\n        avaibleAnswers += \"|\";\n      }\n\n      avaibleAnswers = avaibleAnswers.substring(0, avaibleAnswers.length - 1);\n      var questionObj = {\n        type: \"W\",\n        language: \"PL\",\n        numberOfAvaibleAnswers: numberOfAvaibleAnswers,\n        questionContent: this.props.question,\n        avaibleAnswers: avaibleAnswers\n      };\n      console.log(questionObj);\n      this.props.pusher(questionObj);\n    };\n\n    this.toggleChange = e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: e.target.checked\n      });\n    };\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.state = {\n      numbers: [2, 3, 4, 5, 6],\n      numberOfAvaibleAnswers: 4,\n      answer0: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n      answer4: \"\",\n      answer5: \"\",\n      isCorrect0: false,\n      isCorrect1: false,\n      isCorrect2: false,\n      isCorrect3: false,\n      isCorrect4: false,\n      isCorrect5: false,\n      numberToRender: 4\n    };\n    console.log(this);\n  }\n\n  render() {\n    var rows = [];\n\n    for (var i = 0; i < this.state.numberOfAvaibleAnswers; i++) {\n      rows.push(React.createElement(\"li\", {\n        htmlFor: 'question' + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, 'Question nubmer: ' + (i + 1), React.createElement(\"input\", {\n        id: 'answer' + i,\n        name: 'answer' + i,\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state[i + 2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: 'isCorrect' + i,\n        name: 'isCorrect' + i,\n        type: \"checkbox\",\n        onChange: this.toggleChange,\n        value: this.state[i + 8],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"numberOfAvaibleAnswers\",\n      name: \"numberOfAvaibleAnswers\",\n      defaultValue: \"4\",\n      onChange: () => {\n        this.setState({\n          numberOfAvaibleAnswers: document.getElementById('numberOfAvaibleAnswers').value\n        });\n        ;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.state.numbers.map(number => React.createElement(\"option\", {\n      id: number,\n      name: number,\n      value: number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, number))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, rows), React.createElement(\"button\", {\n      onClick: this.handleQuestionSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"submit\"));\n  }\n\n}\n\nclass QuestionType extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    if (this.props.type == \"O\") {\n      return React.createElement(OpenQuestion, {\n        pusher: this.props.pusher,\n        question: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(ClosedQuestion, {\n      pusher: this.props.pusher,\n      question: this.props.question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass QuestionViewComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState(() => {\n        console.log('setting state');\n        return {\n          nothing: \"\"\n        };\n      });\n    }, 1000);\n  }\n\n  renderF() {\n    var questionList = [];\n\n    for (let i = 0; i < this.props.questionArray.length; i++) {\n      questionList.push(React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \" \", this.props.questionArray[i].questionContent, \"  \", this.props.questionArray[i].type, React.createElement(\"button\", {\n        onClick: () => this.props.handlerDelete(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"delete\"), React.createElement(\"button\", {\n        onClick: () => this.props.handlerEdit(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"edit\")));\n    }\n\n    return questionList;\n  }\n\n  xd() {\n    return this.renderF();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, this.xd());\n  }\n\n}\n\nexport default AddTest;","map":{"version":3,"sources":["C:/Users/pikma/Desktop/Extinguisher/app/src/components/Home/AddTest.js"],"names":["React","Component","Auth","XRNoDomElement","AddTest","state","testName","question","type","errors","types","questionArray","messages","type_incorect","question_incorect","formValidation","correct","length","handleChange","e","name","target","id","setState","value","handleChangeAnswer","document","getElementById","handleEdit","selectedIndex","questionContent","splice","handleQuestionSubmit","push","handleDeleteQuestion","componentDidUpdate","message","setTimeout","render","OpenQuestion","constructor","props","numberOfAvaibleAnswers","avaibleAnswers","questionObj","language","console","log","pusher","ClosedQuestion","i","eval","substring","toggleChange","checked","numbers","answer0","answer1","answer2","answer3","answer4","answer5","isCorrect0","isCorrect1","isCorrect2","isCorrect3","isCorrect4","isCorrect5","numberToRender","rows","map","number","QuestionType","QuestionViewComponent","componentDidMount","setInterval","nothing","renderF","questionList","handlerDelete","handlerEdit","xd"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../style/AddTest.css'\r\nimport { Auth } from 'aws-amplify'\r\nimport { XRNoDomElement } from '@aws-amplify/xr';\r\n\r\n\r\n\r\n\r\nclass AddTest extends Component {\r\n    state = {\r\n        testName:\"\",\r\n        question:\"\",\r\n        type:\"O\",\r\n        errors: {\r\n            question: false,\r\n            type: false,\r\n        },\r\n        types:[\"Open\",\"Closed\"],\r\n        questionArray:[]\r\n    }\r\n    \r\n        messages = {\r\n            type_incorect: 'Question type have not been chosen',\r\n            question_incorect: 'Your question has not any letter',\r\n        }\r\n        \r\n        formValidation = () => {\r\n            let question = false\r\n            let type = false\r\n            let correct = false\r\n            \r\n            if (this.state.type==\"W\" || this.state.type ==\"O\") {\r\n                type = true\r\n            }\r\n            if (this.state.question.length > 0) {\r\n                question = true\r\n            }\r\n            if (question && type) {\r\n                correct = true\r\n            }\r\n            return ({\r\n                correct, question, type\r\n            })\r\n        }\r\n        handleChange = (e) => {\r\n            const name = e.target.id;\r\n            this.setState({\r\n                [name]: e.target.value\r\n            })\r\n        };\r\n        handleChangeAnswer=(e)=>{\r\n            const name = e.target.name;\r\n            this.setState({\r\n                [name]:document.getElementById(name)\r\n            })\r\n        }\r\n        componentDidUpdate() {\r\n            if (this.state.message !== '') {\r\n                setTimeout(() => this.setState({\r\n                    message: ''\r\n                }), 1000);\r\n            }\r\n        }\r\n        handleEdit=(e)=>{\r\n            if(this.state.questionArray[e].type =='W'){\r\n\r\n                document.getElementById(\"testType\").selectedIndex = \"1\";\r\n            }\r\n            else\r\n            {\r\n            document.getElementById(\"testType\").selectedIndex=\"0\";\r\n            this.setState({\r\n                question:this.state.questionArray[e].questionContent,\r\n                type:this.state.questionArray[e].type\r\n            })\r\n          \r\n        \r\n     \r\n                \r\n       \r\n       \r\n      \r\n        }\r\n            this.state.questionArray.splice(e,1);  \r\n        }\r\n        handleQuestionSubmit=(e)=>{\r\n\r\n            this.state.questionArray.push(e);\r\n                \r\n        }\r\n        handleDeleteQuestion=(e)=>{\r\n            \r\n            this.state.questionArray.splice(e,1);\r\n        }\r\n        render() {\r\n            \r\n            return (\r\n             \r\n                <div className=\"addQuestion\">\r\n                     <label htmlFor=\"testName\">testName:\r\n                    <input type=\"question\" id=\"question\" name=\"question\" value={this.state.question} onChange={this.handleChange} />\r\n                    </label>\r\n                    <label htmlFor=\"type\">Chose question type\r\n                    </label>\r\n                    <select id ='testType' onChange={()=>{\r\n        \r\n        this.setState(\r\n            \r\n            {\r\n            type:document.getElementById('testType').value,\r\n        })\r\n    }}>\r\n        <option value='O'>Open</option>\r\n        <option value ='W'>Closed</option>\r\n    </select>\r\n                    <QuestionType type={this.state.type} question={this.state.question} pusher={this.handleQuestionSubmit}/>\r\n                    <QuestionViewComponent handlerEdit = {this.handleEdit} handlerDelete={this.handleDeleteQuestion} questionArray={this.state.questionArray}></QuestionViewComponent> \r\n               </div>\r\n            );\r\n        }\r\n}\r\nclass OpenQuestion extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    this.state={        \r\n    }\r\n}\r\n    handleQuestionSubmit = ()=>{\r\n        var numberOfAvaibleAnswers = 0;\r\n     var avaibleAnswers=\"\"\r\n                var questionObj={\r\n                    type:\"O\",\r\n                    language:\"PL\",\r\n                    numberOfAvaibleAnswers:numberOfAvaibleAnswers,\r\n                    questionContent:this.props.question,\r\n                    avaibleAnswers:avaibleAnswers         \r\n                }\r\n                console.log(questionObj)\r\n                this.props.pusher(questionObj);\r\n    }\r\n    render(){\r\n        return <div>\r\n            <div>DZIALA OPEN QUESTION HERE</div>\r\n        <button onClick={this.handleQuestionSubmit}>submit</button>\r\n</div>\r\n    }\r\n}\r\nclass ClosedQuestion extends Component{\r\n\r\n    constructor(props){\r\n    super(props);\r\n    this.state={\r\n        numbers:[2,3,4,5,6],\r\n        numberOfAvaibleAnswers:4,\r\n        answer0:\"\",\r\n        answer1:\"\",\r\n        answer2:\"\",\r\n        answer3:\"\",\r\n        answer4:\"\",\r\n        answer5:\"\",\r\n        isCorrect0:false,\r\n        isCorrect1:false,\r\n        isCorrect2:false,\r\n        isCorrect3:false,\r\n        isCorrect4:false,\r\n        isCorrect5:false,\r\n        numberToRender:4,\r\n    }\r\n    console.log(this)\r\n    }\r\n    handleQuestionSubmit = ()=>{\r\n       \r\n        \r\n        var numberOfAvaibleAnswers = this.state.numberOfAvaibleAnswers;\r\n     var avaibleAnswers=\"\"\r\n            for(var i =0;i<this.state.numberOfAvaibleAnswers;i++)\r\n            {\r\n            avaibleAnswers+=eval('this.state.answer'+i);\r\n            avaibleAnswers+=\"|\";\r\n            }\r\n        avaibleAnswers= avaibleAnswers.substring(0,avaibleAnswers.length-1);\r\n            \r\n                var questionObj={\r\n                    type:\"W\",\r\n                    language:\"PL\",\r\n                    numberOfAvaibleAnswers:numberOfAvaibleAnswers,\r\n                    questionContent:this.props.question,\r\n                    avaibleAnswers:avaibleAnswers\r\n                    \r\n                }\r\n                console.log(questionObj)\r\n                this.props.pusher(questionObj);\r\n    }\r\n\r\n    toggleChange = (e) => {\r\n        const name = e.target.name\r\n        \r\n        this.setState({\r\n         [name]: e.target.checked,\r\n        });\r\n      }\r\n    \r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        this.setState({\r\n            [name]: e.target.value\r\n        })\r\n    };\r\n    render(){\r\n        var rows = [];\r\n        for (var i = 0; i < this.state.numberOfAvaibleAnswers; i++) {\r\n           \r\n            rows.push(<li htmlFor={'question'+i}>{'Question nubmer: '+(i+1)}\r\n                  <input id= {'answer'+i} name={'answer'+i} type=\"text\"   onChange = {this.handleChange}  value={this.state[i+2]}/>\r\n                  <input id ={'isCorrect'+i} name ={'isCorrect'+i} type='checkbox' onChange={this.toggleChange} value ={this.state[i+8]} ></input>\r\n            </li>);\r\n        }\r\n      return <div>\r\n                    <select  id ='numberOfAvaibleAnswers' name ='numberOfAvaibleAnswers' defaultValue ='4' onChange={()=>{\r\n                         \r\n                         this.setState({\r\n                            numberOfAvaibleAnswers:document.getElementById('numberOfAvaibleAnswers').value,\r\n                        });\r\n        ;\r\n       \r\n        }}> \r\n        {this.state.numbers.map((number)=>\r\n                        <option id={number} name={number} value={number}>{number}</option>)}\r\n                    </select>\r\n                \r\n        <div>\r\n                {rows}\r\n            </div>\r\n            <button onClick={this.handleQuestionSubmit}>submit</button>\r\n            </div>\r\n        \r\n    }\r\n}\r\nclass QuestionType extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n    \r\n    this.state={\r\n\r\n    }\r\n\r\n}\r\n    render(){\r\n        if ( this.props.type == \"O\") {\r\n            return <OpenQuestion  pusher={this.props.pusher} question={this.props.question} />;\r\n        }\r\n  \r\n        return <ClosedQuestion pusher={this.props.pusher} question={this.props.question}/>;\r\n        }\r\n    }\r\n    class QuestionViewComponent extends Component{\r\n\r\n        constructor(props){\r\n            super(props)\r\n            this.state={\r\n            }\r\n        }\r\n        componentDidMount() {\r\n            setInterval(() => {\r\n                this.setState(() => {\r\n                    console.log('setting state');\r\n                    return { nothing : \"\" }\r\n                });\r\n            }, 1000);\r\n        }\r\n\r\n        renderF(){\r\n            var questionList=[];\r\n            \r\n            for(let i=0; i<this.props.questionArray.length; i++)\r\n            {\r\n            questionList.push(<li> {this.props.questionArray[i].questionContent}  {this.props.questionArray[i].type}\r\n            <button  onClick={()=>this.props.handlerDelete(i)}>delete</button>\r\n            <button  onClick={()=>this.props.handlerEdit(i)}>edit</button>\r\n            </li>)\r\n            }\r\n            return questionList\r\n        \r\n    }\r\n        xd(){\r\n            return this.renderF()\r\n        }\r\n    \r\n        render(){\r\n        return <div>\r\n            {this.xd()}\r\n        </div>\r\n    }\r\n}\r\nexport default AddTest;"]},"metadata":{},"sourceType":"module"}