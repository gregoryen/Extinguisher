{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pikma\\\\Desktop\\\\Extinguisher-frontend\\\\app\\\\src\\\\components\\\\Home\\\\AddTest.js\";\nimport React, { Component } from 'react';\nimport '../style/AddTest.css';\nimport { Auth } from 'aws-amplify';\n\nclass AddTest extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      testName: \"\",\n      question: \"\",\n      type: \"O\",\n      questionObj: {\n        \"type\": \"\",\n        \"langugage\": \"PL\",\n        \"questionContent\": \"\",\n        \"numberOfAvaibleAnswers\": \"\",\n        \"avaibleAnswers\": \"\"\n      },\n      answer0: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n      answer4: \"\",\n      answer5: \"\",\n      errors: {\n        question: false,\n        type: false\n      },\n      numberOfQuestion: 4,\n      types: [\"Open\", \"Closed\"]\n    };\n    this.messages = {\n      type_incorect: 'Question type have not been chosen',\n      question_incorect: 'Your question has not any letter'\n    };\n\n    this.formValidation = () => {\n      let question = false;\n      let type = false;\n      let correct = false;\n\n      if (this.state.type == \"W\" || this.state.type == \"O\") {\n        type = true;\n      }\n\n      if (this.state.question.length > 0) {\n        question = true;\n      }\n\n      if (question && type) {\n        correct = true;\n      }\n\n      return {\n        correct,\n        question,\n        type\n      };\n    };\n\n    this.handleChange = e => {\n      const name = e.target.id;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.handleChangeAnswer = e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: document.getElementById(name)\n      });\n    };\n\n    this.handlePlusButton = async e => {\n      alert(\"User confirmed\");\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const validation = this.formValidation();\n      console.log(validation);\n\n      if (validation.correct) {\n        this.setState({\n          message: 'Send, please wait',\n          errors: {\n            question: false,\n            type: false\n          }\n        });\n\n        try {\n          await Auth.confirmSignUp(this.state.question, this.state.type); // console.log(vall)\n\n          alert(\"User confirmed\");\n        } catch (e) {\n          alert(e.message);\n        }\n      } else {\n        this.setState({\n          errors: {\n            type: !validation.type,\n            question: !validation.question\n          }\n        });\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.message !== '') {\n      setTimeout(() => this.setState({\n        message: ''\n      }), 9000);\n    }\n  }\n\n  handleQuestionSubmit() {\n    var avaibleAnswers = \"\";\n\n    if (this.state.type == 'O') {} else {\n      for (var i = 0; i < this.state.avaibleAnswers; i++) avaibleAnswers += document.getElementById('question' + i);\n\n      avaibleAnswers += '|';\n    }\n\n    avaibleAnswers = avaibleAnswers.slice(0, avaibleAnswers.length - 2);\n    this.setState({\n      questionObj: {\n        type: this.state.type,\n        numberOfAvaibleAnswers: this.state.numberOfAvaibleAnswers,\n        questionContent: this.state.question,\n        avaibleAnswers: avaibleAnswers\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"addQuestion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"testName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"testName:\", React.createElement(\"input\", {\n      type: \"question\",\n      id: \"question\",\n      name: \"question\",\n      value: this.state.question,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Chose question type\"), React.createElement(\"select\", {\n      id: \"testType\",\n      onChange: () => {\n        this.setState({\n          type: document.getElementById('testType').value\n        }); // this.setState();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"O\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"option\", {\n      value: \"W\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Closed\")), React.createElement(Greeting, {\n      type: this.state.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), \",\", React.createElement(\"button\", {\n      onSubmit: this.handleQuestionSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"submit\"));\n  }\n\n}\n\nclass NumberOfQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.state = {\n      numbers: [2, 3, 4, 5, 6],\n      numberOfAvaibleAnswers: \"4\"\n    };\n  }\n\n  async asyncHandler() {\n    await this.setState({\n      numberOfAvaibleAnswers: document.getElementById('numberOfAvaibleAnswers').value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"numberOfAvaibleAnswers\",\n      name: \"numberOfAvaibleAnswers\",\n      defaultValue: \"4\",\n      onChange: () => {\n        this.asyncHandler();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.state.numbers.map(number => React.createElement(\"option\", {\n      value: number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, number))));\n  }\n\n}\n\nclass OpenQuestion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chceSieTuDostacZInnegoComponentu: \"Ale nie moge\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"DZIALA OPEN QUESTION HERE\");\n  }\n\n}\n\nclass ClosedQuestion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfQuestionComponent: new NumberOfQuestion(),\n      inputClosedAnswers: new InputClosedAnswers(),\n      numberToRender: 4\n    };\n    this.handler = this.handler.bind(this);\n  }\n\n  handler(x) {\n    this.setState({\n      numberToRender: x\n    });\n  }\n\n  handlerInput(x) {\n    this.state.InputClosedAnswers.setState({\n      numberToRender: this.state.numberToRender\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, this.state.numberOfQuestionComponent.state, React.createElement(InputClosedAnswers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass InputClosedAnswers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.state = {\n      numberToRender: 4,\n      answer0: \"\",\n      answer1: \"\",\n      answer2: \"\",\n      answer3: \"\",\n      answer4: \"\",\n      answer5: \"\"\n    };\n  }\n\n  render() {\n    var rows = [];\n\n    for (var i = 0; i < this.props.numberToRender; i++) {\n      rows.push(React.createElement(\"li\", {\n        htmlFor: 'question' + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, 'Question nubmer: ' + (i + 1), React.createElement(\"input\", {\n        id: 'answer' + i,\n        name: 'answer' + i,\n        type: \"text\",\n        onChange: this.handleChange,\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, rows);\n  }\n\n}\n\nclass Greeting extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    if (this.props.type == \"O\") {\n      return React.createElement(OpenQuestion, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(ClosedQuestion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default AddTest;","map":{"version":3,"sources":["C:/Users/pikma/Desktop/Extinguisher-frontend/app/src/components/Home/AddTest.js"],"names":["React","Component","Auth","AddTest","state","testName","question","type","questionObj","answer0","answer1","answer2","answer3","answer4","answer5","errors","numberOfQuestion","types","messages","type_incorect","question_incorect","formValidation","correct","length","handleChange","e","name","target","id","setState","value","handleChangeAnswer","document","getElementById","handlePlusButton","alert","handleSubmit","preventDefault","validation","console","log","message","confirmSignUp","componentDidUpdate","setTimeout","handleQuestionSubmit","avaibleAnswers","i","slice","numberOfAvaibleAnswers","questionContent","render","NumberOfQuestion","constructor","props","numbers","asyncHandler","map","number","OpenQuestion","chceSieTuDostacZInnegoComponentu","ClosedQuestion","numberOfQuestionComponent","inputClosedAnswers","InputClosedAnswers","numberToRender","handler","bind","x","handlerInput","rows","push","Greeting"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;AACA,SAASC,IAAT,QAAqB,aAArB;;AAKA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACpB;AACJC,MAAAA,QAAQ,EAAC,EADL;AAEJC,MAAAA,QAAQ,EAAC,EAFL;AAGJC,MAAAA,IAAI,EAAC,GAHD;AAIJC,MAAAA,WAAW,EAAE;AACT,gBAAQ,EADC;AAET,qBAAa,IAFJ;AAGT,2BAAmB,EAHV;AAIT,kCAA0B,EAJjB;AAKT,0BAAkB;AALT,OAJT;AAYAC,MAAAA,OAAO,EAAC,EAZR;AAaAC,MAAAA,OAAO,EAAC,EAbR;AAcAC,MAAAA,OAAO,EAAC,EAdR;AAeAC,MAAAA,OAAO,EAAC,EAfR;AAgBAC,MAAAA,OAAO,EAAC,EAhBR;AAiBAC,MAAAA,OAAO,EAAC,EAjBR;AAmBJC,MAAAA,MAAM,EAAE;AACJT,QAAAA,QAAQ,EAAE,KADN;AAEJC,QAAAA,IAAI,EAAE;AAFF,OAnBJ;AAuBJS,MAAAA,gBAAgB,EAAC,CAvBb;AAwBJC,MAAAA,KAAK,EAAC,CAAC,MAAD,EAAQ,QAAR;AAxBF,KADoB;AAAA,SA4BxBC,QA5BwB,GA4Bb;AACPC,MAAAA,aAAa,EAAE,oCADR;AAEPC,MAAAA,iBAAiB,EAAE;AAFZ,KA5Ba;;AAAA,SAiCxBC,cAjCwB,GAiCP,MAAM;AACnB,UAAIf,QAAQ,GAAG,KAAf;AACA,UAAIC,IAAI,GAAG,KAAX;AACA,UAAIe,OAAO,GAAG,KAAd;;AAEA,UAAI,KAAKlB,KAAL,CAAWG,IAAX,IAAiB,GAAjB,IAAwB,KAAKH,KAAL,CAAWG,IAAX,IAAkB,GAA9C,EAAmD;AAC/CA,QAAAA,IAAI,GAAG,IAAP;AACH;;AACD,UAAI,KAAKH,KAAL,CAAWE,QAAX,CAAoBiB,MAApB,GAA6B,CAAjC,EAAoC;AAChCjB,QAAAA,QAAQ,GAAG,IAAX;AACH;;AACD,UAAIA,QAAQ,IAAIC,IAAhB,EAAsB;AAClBe,QAAAA,OAAO,GAAG,IAAV;AACH;;AACD,aAAQ;AACJA,QAAAA,OADI;AACKhB,QAAAA,QADL;AACeC,QAAAA;AADf,OAAR;AAGH,KAlDuB;;AAAA,SAmDxBiB,YAnDwB,GAmDRC,CAAD,IAAO;AAClB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,EAAtB;AACA,WAAKC,QAAL,CAAc;AACV,SAACH,IAAD,GAAQD,CAAC,CAACE,MAAF,CAASG;AADP,OAAd;AAGH,KAxDuB;;AAAA,SAyDxBC,kBAzDwB,GAyDJN,CAAD,IAAK;AACpB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,WAAKG,QAAL,CAAc;AACV,SAACH,IAAD,GAAOM,QAAQ,CAACC,cAAT,CAAwBP,IAAxB;AADG,OAAd;AAGH,KA9DuB;;AAAA,SA+DxBQ,gBA/DwB,GA+DL,MAAMT,CAAN,IAAU;AACzBU,MAAAA,KAAK,CAAC,gBAAD,CAAL;AAEH,KAlEuB;;AAAA,SAmExBC,YAnEwB,GAmET,MAAOX,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACY,cAAF;AAEA,YAAMC,UAAU,GAAG,KAAKjB,cAAL,EAAnB;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACA,UAAIA,UAAU,CAAChB,OAAf,EAAwB;AACpB,aAAKO,QAAL,CAAc;AACVY,UAAAA,OAAO,EAAE,mBADC;AAEV1B,UAAAA,MAAM,EAAE;AACJT,YAAAA,QAAQ,EAAE,KADN;AAEJC,YAAAA,IAAI,EAAE;AAFF;AAFE,SAAd;;AAOA,YAAI;AAEA,gBAAML,IAAI,CAACwC,aAAL,CAAmB,KAAKtC,KAAL,CAAWE,QAA9B,EAAwC,KAAKF,KAAL,CAAWG,IAAnD,CAAN,CAFA,CAGA;;AACA4B,UAAAA,KAAK,CAAC,gBAAD,CAAL;AACH,SALD,CAKE,OAAOV,CAAP,EAAU;AACRU,UAAAA,KAAK,CAACV,CAAC,CAACgB,OAAH,CAAL;AACH;AACJ,OAhBD,MAiBK;AACD,aAAKZ,QAAL,CAAc;AACVd,UAAAA,MAAM,EAAE;AACJR,YAAAA,IAAI,EAAE,CAAC+B,UAAU,CAAC/B,IADd;AAEJD,YAAAA,QAAQ,EAAE,CAACgC,UAAU,CAAChC;AAFlB;AADE,SAAd;AAMH;AACJ,KAjGuB;AAAA;;AAkGxBqC,EAAAA,kBAAkB,GAAG;AACjB,QAAI,KAAKvC,KAAL,CAAWqC,OAAX,KAAuB,EAA3B,EAA+B;AAC3BG,MAAAA,UAAU,CAAC,MAAM,KAAKf,QAAL,CAAc;AAC3BY,QAAAA,OAAO,EAAE;AADkB,OAAd,CAAP,EAEN,IAFM,CAAV;AAGH;AACJ;;AACDI,EAAAA,oBAAoB,GAAE;AAClB,QAAIC,cAAc,GAAG,EAArB;;AACA,QAAG,KAAK1C,KAAL,CAAWG,IAAX,IAAmB,GAAtB,EAA0B,CAAE,CAA5B,MAEA;AACI,WAAI,IAAIwC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAAC,KAAK3C,KAAL,CAAW0C,cAA1B,EAAyCC,CAAC,EAA1C,EACAD,cAAc,IAAEd,QAAQ,CAACC,cAAT,CAAwB,aAAWc,CAAnC,CAAhB;;AACAD,MAAAA,cAAc,IAAE,GAAhB;AACH;;AACDA,IAAAA,cAAc,GAAEA,cAAc,CAACE,KAAf,CAAqB,CAArB,EAAuBF,cAAc,CAACvB,MAAf,GAAsB,CAA7C,CAAhB;AACI,SAAKM,QAAL,CAAc;AACVrB,MAAAA,WAAW,EAAC;AACRD,QAAAA,IAAI,EAAC,KAAKH,KAAL,CAAWG,IADR;AAER0C,QAAAA,sBAAsB,EAAC,KAAK7C,KAAL,CAAW6C,sBAF1B;AAGRC,QAAAA,eAAe,EAAC,KAAK9C,KAAL,CAAWE,QAHnB;AAIRwC,QAAAA,cAAc,EAACA;AAJP;AADF,KAAd;AAWP;;AACDK,EAAAA,MAAM,GAAG;AAEL,WAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC,UAA1B;AAAqC,MAAA,IAAI,EAAC,UAA1C;AAAqD,MAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWE,QAAvE;AAAiF,MAAA,QAAQ,EAAE,KAAKkB,YAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CADL,EAII;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,EAMI;AAAQ,MAAA,EAAE,EAAE,UAAZ;AAAuB,MAAA,QAAQ,EAAE,MAAI;AAEjD,aAAKK,QAAL,CAEI;AACAtB,UAAAA,IAAI,EAACyB,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCH;AADzC,SAFJ,EAFiD,CAOlD;AACF,OARe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASZ;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATY,EAUZ;AAAQ,MAAA,KAAK,EAAE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVY,CANJ,EAkBI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAK1B,KAAL,CAAWG,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,OAmBI;AAAQ,MAAA,QAAQ,EAAE,KAAKsC,oBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,CAFJ;AAyBH;;AA1JuB;;AAiKhC,MAAMO,gBAAN,SAA+BnD,SAA/B,CAAwC;AACpCoD,EAAAA,WAAW,CAACC,KAAD,EAAO;AACtB,UAAMA,KAAN;;AADsB,SAQtB9B,YARsB,GAQNC,CAAD,IAAO;AAClB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,WAAKG,QAAL,CAAc;AACV,SAACH,IAAD,GAAQD,CAAC,CAACE,MAAF,CAASG;AADP,OAAd;AAGH,KAbqB;;AAGlB,SAAK1B,KAAL,GAAW;AACPmD,MAAAA,OAAO,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CADD;AAEPN,MAAAA,sBAAsB,EAAC;AAFhB,KAAX;AAIH;;AAOD,QAAMO,YAAN,GAAoB;AACjB,UAAM,KAAK3B,QAAL,CAAc;AACfoB,MAAAA,sBAAsB,EAACjB,QAAQ,CAACC,cAAT,CAAwB,wBAAxB,EAAkDH;AAD1D,KAAd,CAAN;AAMF;;AACGqB,EAAAA,MAAM,GAAE;AACJ,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAS,MAAA,EAAE,EAAE,wBAAb;AAAsC,MAAA,IAAI,EAAE,wBAA5C;AAAqE,MAAA,YAAY,EAAE,GAAnF;AAAuF,MAAA,QAAQ,EAAE,MAAI;AAEvG,aAAKK,YAAL;AAGT,OALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMX,KAAKpD,KAAL,CAAWmD,OAAX,CAAmBE,GAAnB,CAAwBC,MAAD,IACR;AAAQ,MAAA,KAAK,EAAEA,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBA,MAAxB,CADf,CANW,CADL,CAAP;AAWH;;AAnCmC;;AAqCxC,MAAMC,YAAN,SAA2B1D,SAA3B,CAAoC;AAAA;AAAA;AAAA,SAChCG,KADgC,GAC1B;AACMwD,MAAAA,gCAAgC,EAAC;AADvC,KAD0B;AAAA;;AAIhCT,EAAAA,MAAM,GAAE;AACJ,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACH;;AAN+B;;AASpC,MAAMU,cAAN,SAA6B5D,SAA7B,CAAsC;AAElCoD,EAAAA,WAAW,CAACC,KAAD,EAAO;AAElB,UAAMA,KAAN;AACA,SAAKlD,KAAL,GAAW;AACP0D,MAAAA,yBAAyB,EAAG,IAAIV,gBAAJ,EADrB;AAEPW,MAAAA,kBAAkB,EAAE,IAAIC,kBAAJ,EAFb;AAGPC,MAAAA,cAAc,EAAC;AAHR,KAAX;AAMA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AAEC;;AAEHD,EAAAA,OAAO,CAACE,CAAD,EAAI;AACT,SAAKvC,QAAL,CAAc;AACZoC,MAAAA,cAAc,EAAEG;AADJ,KAAd;AAGD;;AACDC,EAAAA,YAAY,CAACD,CAAD,EAAG;AACX,SAAKhE,KAAL,CAAW4D,kBAAX,CAA8BnC,QAA9B,CAAuC;AACnCoC,MAAAA,cAAc,EAAC,KAAK7D,KAAL,CAAW6D;AADS,KAAvC;AAGH;;AAGCd,EAAAA,MAAM,GAAE;AACN,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,KAAK/C,KAAL,CAAW0D,yBAAX,CAAqC1D,KADnC,EAGL,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHK,CAAP;AAKD;;AAjCiC;;AAmCtC,MAAM4D,kBAAN,SAAiC/D,SAAjC,CAA0C;AACtCoD,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;;AADkB,SAYlB9B,YAZkB,GAYFC,CAAD,IAAO;AAClB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,WAAKG,QAAL,CAAc;AACV,SAACH,IAAD,GAAQD,CAAC,CAACE,MAAF,CAASG;AADP,OAAd;AAGH,KAjBiB;;AAElB,SAAK1B,KAAL,GAAW;AACP6D,MAAAA,cAAc,EAAC,CADR;AAEHxD,MAAAA,OAAO,EAAC,EAFL;AAGHC,MAAAA,OAAO,EAAC,EAHL;AAIHC,MAAAA,OAAO,EAAC,EAJL;AAKHC,MAAAA,OAAO,EAAC,EALL;AAMHC,MAAAA,OAAO,EAAC,EANL;AAOHC,MAAAA,OAAO,EAAC;AAPL,KAAX;AASH;;AAOGqC,EAAAA,MAAM,GAAE;AACJ,QAAImB,IAAI,GAAG,EAAX;;AACI,SAAK,IAAIvB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKO,KAAL,CAAWW,cAA/B,EAA+ClB,CAAC,EAAhD,EAAoD;AAEhDuB,MAAAA,IAAI,CAACC,IAAL,CAAU;AAAI,QAAA,OAAO,EAAE,aAAWxB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,uBAAqBA,CAAC,GAAC,CAAvB,CAA5B,EACJ;AAAO,QAAA,EAAE,EAAG,WAASA,CAArB;AAAwB,QAAA,IAAI,EAAE,WAASA,CAAvC;AAA0C,QAAA,IAAI,EAAC,MAA/C;AAAwD,QAAA,QAAQ,EAAI,KAAKvB,YAAzE;AAAwF,QAAA,KAAK,EAAC,EAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,CAAV;AAGH;;AAEO,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF8C,IADE,CAAP;AAGT;;AA/B+B;;AAiC1C,MAAME,QAAN,SAAuBvE,SAAvB,CAAgC;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACtB,EADsB;AAAA;;AAI5B+C,EAAAA,MAAM,GAAE;AACJ,QAAK,KAAKG,KAAL,CAAW/C,IAAX,IAAmB,GAAxB,EAA6B;AACzB,aAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC;;AAVuB;;AAYhC,eAAeJ,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport '../style/AddTest.css'\r\nimport { Auth } from 'aws-amplify'\r\n\r\n\r\n\r\n\r\nclass AddTest extends Component {\r\n    state = {\r\n        testName:\"\",\r\n        question:\"\",\r\n        type:\"O\",\r\n        questionObj: {\r\n            \"type\": \"\",\r\n            \"langugage\": \"PL\",\r\n            \"questionContent\": \"\",\r\n            \"numberOfAvaibleAnswers\": \"\",\r\n            \"avaibleAnswers\": \"\"\r\n          },\r\n        \r\n            answer0:\"\",\r\n            answer1:\"\",\r\n            answer2:\"\",\r\n            answer3:\"\",\r\n            answer4:\"\",\r\n            answer5:\"\",\r\n        \r\n        errors: {\r\n            question: false,\r\n            type: false,\r\n        },\r\n        numberOfQuestion:4,\r\n        types:[\"Open\",\"Closed\"]\r\n    }\r\n    \r\n        messages = {\r\n            type_incorect: 'Question type have not been chosen',\r\n            question_incorect: 'Your question has not any letter',\r\n        }\r\n        \r\n        formValidation = () => {\r\n            let question = false\r\n            let type = false\r\n            let correct = false\r\n            \r\n            if (this.state.type==\"W\" || this.state.type ==\"O\") {\r\n                type = true\r\n            }\r\n            if (this.state.question.length > 0) {\r\n                question = true\r\n            }\r\n            if (question && type) {\r\n                correct = true\r\n            }\r\n            return ({\r\n                correct, question, type\r\n            })\r\n        }\r\n        handleChange = (e) => {\r\n            const name = e.target.id;\r\n            this.setState({\r\n                [name]: e.target.value\r\n            })\r\n        };\r\n        handleChangeAnswer=(e)=>{\r\n            const name = e.target.name;\r\n            this.setState({\r\n                [name]:document.getElementById(name)\r\n            })\r\n        }\r\n        handlePlusButton = async(e)=>{\r\n            alert(\"User confirmed\");\r\n         \r\n        }\r\n        handleSubmit = async (e) => {\r\n            e.preventDefault()\r\n    \r\n            const validation = this.formValidation()\r\n            console.log(validation)\r\n            if (validation.correct) {\r\n                this.setState({\r\n                    message: 'Send, please wait',\r\n                    errors: {\r\n                        question: false,\r\n                        type: false,\r\n                    }\r\n                })\r\n                try {   \r\n                    \r\n                    await Auth.confirmSignUp(this.state.question, this.state.type);\r\n                    // console.log(vall)\r\n                    alert(\"User confirmed\");\r\n                } catch (e) {\r\n                    alert(e.message);\r\n                }\r\n            }\r\n            else {\r\n                this.setState({\r\n                    errors: {\r\n                        type: !validation.type,\r\n                        question: !validation.question,\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        componentDidUpdate() {\r\n            if (this.state.message !== '') {\r\n                setTimeout(() => this.setState({\r\n                    message: ''\r\n                }), 9000);\r\n            }\r\n        }\r\n        handleQuestionSubmit(){\r\n            var avaibleAnswers = \"\"\r\n            if(this.state.type == 'O'){}\r\n            else\r\n            {\r\n                for(var i =0;i<this.state.avaibleAnswers;i++)\r\n                avaibleAnswers+=document.getElementById('question'+i);\r\n                avaibleAnswers+='|';\r\n            }\r\n            avaibleAnswers= avaibleAnswers.slice(0,avaibleAnswers.length-2);\r\n                this.setState({\r\n                    questionObj:{\r\n                        type:this.state.type,\r\n                        numberOfAvaibleAnswers:this.state.numberOfAvaibleAnswers,\r\n                        questionContent:this.state.question,\r\n                        avaibleAnswers:avaibleAnswers\r\n                        \r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n        render() {\r\n            \r\n            return (\r\n             \r\n                <div className=\"addQuestion\">\r\n                     <label htmlFor=\"testName\">testName:\r\n                    <input type=\"question\" id=\"question\" name=\"question\" value={this.state.question} onChange={this.handleChange} />\r\n                    </label>\r\n                    <label htmlFor=\"type\">Chose question type\r\n                    </label>\r\n                    <select id ='testType' onChange={()=>{\r\n        \r\n        this.setState(\r\n            \r\n            {\r\n            type:document.getElementById('testType').value,\r\n        })\r\n       // this.setState();\r\n    }}>\r\n        <option value='O'>Open</option>\r\n        <option value ='W'>Closed</option>\r\n    </select>\r\n                    <Greeting type={this.state.type} />,\r\n                    <button onSubmit={this.handleQuestionSubmit}>submit</button>\r\n\r\n               </div>\r\n            );\r\n        }\r\n\r\n \r\n}\r\n\r\n\r\n\r\nclass NumberOfQuestion extends Component{\r\n    constructor(props){\r\nsuper(props);\r\n        \r\n    this.state={\r\n        numbers:[2,3,4,5,6],\r\n        numberOfAvaibleAnswers:\"4\"\r\n    }\r\n}\r\nhandleChange = (e) => {\r\n    const name = e.target.name;\r\n    this.setState({\r\n        [name]: e.target.value\r\n    })\r\n};\r\nasync asyncHandler(){\r\n   await this.setState({\r\n        numberOfAvaibleAnswers:document.getElementById('numberOfAvaibleAnswers').value,\r\n    });\r\n\r\n \r\n   \r\n}\r\n    render(){\r\n        return <div>\r\n                    <select  id ='numberOfAvaibleAnswers' name ='numberOfAvaibleAnswers' defaultValue ='4' onChange={()=>{\r\n                         \r\n                  this.asyncHandler()\r\n        ;\r\n       \r\n        }}> \r\n        {this.state.numbers.map((number)=>\r\n                        <option value={number}>{number}</option>)}\r\n                    </select>\r\n                </div>\r\n    }\r\n}\r\nclass OpenQuestion extends Component{\r\n    state={\r\n                chceSieTuDostacZInnegoComponentu:\"Ale nie moge\"\r\n    }\r\n    render(){\r\n        return <div>DZIALA OPEN QUESTION HERE</div>\r\n    }\r\n}\r\n\r\nclass ClosedQuestion extends Component{\r\n    \r\n    constructor(props){\r\n\r\n    super(props);\r\n    this.state={\r\n        numberOfQuestionComponent : new NumberOfQuestion(),\r\n        inputClosedAnswers: new InputClosedAnswers(),\r\n        numberToRender:4,\r\n    \r\n    }\r\n    this.handler = this.handler.bind(this)\r\n    \r\n    }\r\n    \r\n  handler(x) {\r\n    this.setState({\r\n      numberToRender: x\r\n    })\r\n  }\r\n  handlerInput(x){\r\n      this.state.InputClosedAnswers.setState({\r\n          numberToRender:this.state.numberToRender\r\n      })\r\n  }\r\n  \r\n    \r\n    render(){\r\n      return <div>\r\n          {this.state.numberOfQuestionComponent.state}\r\n      \r\n        <InputClosedAnswers/>\r\n        </div>\r\n    }\r\n}\r\nclass InputClosedAnswers extends Component{\r\n    constructor(props){\r\n    super(props);\r\n    this.state={\r\n        numberToRender:4,\r\n            answer0:\"\",\r\n            answer1:\"\",\r\n            answer2:\"\",\r\n            answer3:\"\",\r\n            answer4:\"\",\r\n            answer5:\"\",\r\n    }\r\n}\r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        this.setState({\r\n            [name]: e.target.value\r\n        })\r\n    };\r\n    render(){\r\n        var rows = [];\r\n            for (var i = 0; i < this.props.numberToRender; i++) {\r\n               \r\n                rows.push(<li htmlFor={'question'+i}>{'Question nubmer: '+(i+1)}\r\n                      <input id= {'answer'+i} name={'answer'+i} type=\"text\"   onChange = {this.handleChange}  value=''/>\r\n                </li>);\r\n            }\r\n            \r\n                    return <div>\r\n                        {rows}\r\n                    </div>\r\n          }\r\n    }\r\nclass Greeting extends Component{\r\n    state={\r\n\r\n    }\r\n    render(){\r\n        if ( this.props.type == \"O\") {\r\n            return <OpenQuestion />;\r\n        }\r\n  \r\n        return <ClosedQuestion/>;\r\n        }\r\n    }\r\nexport default AddTest;"]},"metadata":{},"sourceType":"module"}